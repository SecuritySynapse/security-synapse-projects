"""CVE-2023-24329: Issue with urlparse not correctly handling schemes, which could lead to security bypasses."""

import urllib.parse

# An issue in the urllib.parse component of Python before 3.11.4 allows attackers to bypass blocklisting methods by supplying a URL that starts with blank characters (https://www.cve.org/CVERecord?id=CVE-2023-24329).

# The root cause of the problem lies in the way the urlparse() function processes the URL string. It first checks for a colon (':') character to determine the end of the scheme. However, if the URL starts with a blank character, the colon is not found, and the entire URL is incorrectly interpreted as the path component. This leads to incorrect parsing of the hostname and scheme, which can be exploited by attackers to bypass security measures

# COMMANDS TO SHOW VULNERABILITY:
# 1. asdf global python 3.11.0
# 2. python main.py

# COMMANDS TO SHOW PATCH:
# 1. asdf global python 3.12.0
# 2. python main.py

# Blocklist of restricted domains
blocklist = ["example.com"]

# Malicious URL with leading blank characters
url = "   https://example.com"

# Parse the URL
parsed_url = urllib.parse.urlparse(url)

# Check if the domain is in the blocklist
if parsed_url.netloc in blocklist:
    # print the actual url and what is beingcheckd
    print(f"\nActual URL: {url}")
    print(f"Checked Netloc: {parsed_url.netloc}")
    print("Access denied: Domain is blocked.\n")
else:
    print(f"\nActual URL: {url}")
    print(f"Checked Netloc: {parsed_url.netloc}")
    print("Access granted: Domain is not blocked.\n")
